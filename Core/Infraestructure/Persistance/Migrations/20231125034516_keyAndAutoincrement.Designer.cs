// <auto-generated />
using System;
using Core.Infraestructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Core.Infraestructure.Persistance.Migrations
{
    [DbContext(typeof(ConvenioContext))]
    [Migration("20231125034516_keyAndAutoincrement")]
    partial class keyAndAutoincrement
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Presentation.Alerta", b =>
                {
                    b.Property<int>("Alerta_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Contrato_Id")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAdmin")
                        .IsRequired()
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsInstitucion")
                        .IsRequired()
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Alerta_Id");

                    b.HasIndex("Contrato_Id");

                    b.ToTable("Alertas");
                });

            modelBuilder.Entity("Presentation.Chat", b =>
                {
                    b.Property<int>("Chat_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Contrato_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Usuario_Id")
                        .HasColumnType("int");

                    b.HasKey("Chat_Id");

                    b.HasIndex("Contrato_Id");

                    b.HasIndex("Usuario_Id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("Presentation.Contrato", b =>
                {
                    b.Property<int>("Contrato_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaFinalizacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Institucion_Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Contrato_Id");

                    b.HasIndex("Institucion_Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("Presentation.Institucion", b =>
                {
                    b.Property<int>("Institucion_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ciudad")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Pais")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Institucion_Id");

                    b.ToTable("Instituciones");
                });

            modelBuilder.Entity("Presentation.Log", b =>
                {
                    b.Property<int>("Log_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Contrato_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .IsRequired()
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Usuario_Id")
                        .HasColumnType("int");

                    b.HasKey("Log_Id");

                    b.HasIndex("Contrato_Id");

                    b.HasIndex("Usuario_Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Presentation.Rol", b =>
                {
                    b.Property<int>("Rol_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Rol_Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Presentation.Usuario", b =>
                {
                    b.Property<int>("Usuario_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool?>("AcceptTerms")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Institucion_Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Rol_Id")
                        .HasColumnType("int");

                    b.HasKey("Usuario_Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Institucion_Id");

                    b.HasIndex("Rol_Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Presentation.Alerta", b =>
                {
                    b.HasOne("Presentation.Contrato", "Contratos")
                        .WithMany("Alerts")
                        .HasForeignKey("Contrato_Id")
                        .HasConstraintName("Alert_ibfk_1");

                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("Presentation.Chat", b =>
                {
                    b.HasOne("Presentation.Contrato", "Contratos")
                        .WithMany("Chats")
                        .HasForeignKey("Contrato_Id")
                        .IsRequired()
                        .HasConstraintName("Chat_ibfk_1");

                    b.HasOne("Presentation.Usuario", "Usuarios")
                        .WithMany("Chats")
                        .HasForeignKey("Usuario_Id")
                        .IsRequired()
                        .HasConstraintName("Chat_ibfk_2");

                    b.Navigation("Contratos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Presentation.Contrato", b =>
                {
                    b.HasOne("Presentation.Institucion", "Instituciones")
                        .WithMany("Agreements")
                        .HasForeignKey("Institucion_Id")
                        .IsRequired()
                        .HasConstraintName("Agreement_ibfk_1");

                    b.Navigation("Instituciones");
                });

            modelBuilder.Entity("Presentation.Log", b =>
                {
                    b.HasOne("Presentation.Contrato", "Contratos")
                        .WithMany("Logs")
                        .HasForeignKey("Contrato_Id")
                        .HasConstraintName("Log_ibfk_1");

                    b.HasOne("Presentation.Usuario", "Usuarios")
                        .WithMany("Logs")
                        .HasForeignKey("Usuario_Id")
                        .IsRequired()
                        .HasConstraintName("Log_ibfk_2");

                    b.Navigation("Contratos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Presentation.Usuario", b =>
                {
                    b.HasOne("Presentation.Institucion", "Instituciones")
                        .WithMany("Users")
                        .HasForeignKey("Institucion_Id")
                        .IsRequired()
                        .HasConstraintName("User_institution_FK");

                    b.HasOne("Presentation.Rol", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("Rol_Id")
                        .HasConstraintName("User_ibfk_1");

                    b.Navigation("Instituciones");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Presentation.Contrato", b =>
                {
                    b.Navigation("Alerts");

                    b.Navigation("Chats");

                    b.Navigation("Logs");
                });

            modelBuilder.Entity("Presentation.Institucion", b =>
                {
                    b.Navigation("Agreements");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Presentation.Rol", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Presentation.Usuario", b =>
                {
                    b.Navigation("Chats");

                    b.Navigation("Logs");
                });
#pragma warning restore 612, 618
        }
    }
}
